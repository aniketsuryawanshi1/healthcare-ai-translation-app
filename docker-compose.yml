services:

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3307:3306"
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis_service
    ports:
      - "6379:6379"
    networks:
      - app_network

  backend:
    build: 
      context: ./backend
    container_name: backend_service
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    environment:
      DJANGO_SETTINGS_MODULE: healthcare_ai_translation.settings
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: >
      sh -c "
             python download_model.py &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 healthcare_ai_translation.asgi:application"
    networks:
      - app_network

  frontend:
    image: node:22-alpine  # Use Node image directly
    container_name: frontend_service
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:5173"  # Expose dev server port
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:

volumes:
  mysql_data:
  static_volume:
  media_volume: